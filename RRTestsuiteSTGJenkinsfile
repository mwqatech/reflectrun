pipeline {
  agent any
  stages {
    stage('QA Staging Sanity'){
     parallel{
        stage('Man Matters Staging Sanity') {
          steps {
            sh 'la -l'
          }
        }
        stage('BE Bodywise Staging Sanity') {
          steps {
            sh 'ls -l'
          }
        }
        stage('Little Joys Staging Sanity') {
          steps {
            sh 'ls -l'
          }
        }
    }
  }
  }   
  post {
        always {
          emailext body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
                attachLog: true, recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                to: 'bhushan.pujar@mosaicwellness.in, arun.ramesh@mosaicwellness.in, abhay.kaintura@mosaicwellness.in, tejaswini.gowda@mosaicwellness.in, basanagouda.b@mosaicwellness.in', 
                subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}"     
            }
        failure {
          create_newjira_issue()
        }
    }  
}
void create_newjira_issue() {
    node {
      stage('Defect Management') {
        def NewJiraIssue = [fields: [project: [key: 'MWQA'],
            summary: "QA Sanity Test Build for Job ${env.JOB_NAME}: Build - ${currentBuild.number} and Status -> ${currentBuild.currentResult}",
            description: "Sanity TCs Failed for Man Matters/Be Bodywise/Little Joys -> Please check on ${env.BUILD_URL} and ${currentBuild.number} for the Job ${env.JOB_NAME}",
            issuetype: [id: '10108']]]

    response = jiraNewIssue issue: NewJiraIssue, site: 'JIRA'
    echo response.successful.toString()
    echo response.data.toString()
    
    //def attachment = "${env.BUILD_URL}/consoleText"
    sh "curl  ${env.BUILD_URL}/consoleText -o attachment"
    
    //def attachment = jiraUploadAttachment site: 'JIRA', idOrKey: 'TEST-REPORT', file: 'test_report.txt'
    echo attachment

    }
  }
}
